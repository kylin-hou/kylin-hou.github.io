<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[很不喜欢这样的自己]]></title>
      <url>http://yoursite.com/2016/07/26/%E4%B8%8D%E5%96%9C%E6%AC%A2%E8%BF%99%E6%A0%B7%E7%9A%84%E8%87%AA%E5%B7%B1/</url>
      <content type="html"><![CDATA[<h3 id="为什么又开始这样了"><a href="#为什么又开始这样了" class="headerlink" title="为什么又开始这样了"></a>为什么又开始这样了</h3><p>现在刚刚到了一个新的环境，刚刚开始一段新的生活。最重要的是会遇见很多很多的人，我又要开始认识新的朋友了。</p>
<a id="more"></a>
<p>我这样的人是很不擅长跟人打交道的，特别是让我在同一时间认识很多的人。一堆人里面，我往往会找出几个看着顺眼的，不管男的女的，就是顺眼的，然后稍微聊一下，感觉不错就可以交朋友了。然后我致命的点来了，当我运气好的时候，可以很快的在心里定下几个人为我的好朋友，然后热情的付出。我根本都不清楚别人的心里是怎么想的，我就自己一边热了，这是我煞笔的第一点吧。</p>
<p>当我自己心里感觉在这个新的环境中有了几个好朋友之后，我就没有认识其他人的欲望了，我只想着一直跟朋友在一块，其他人一般真是不想搭理了，除非让我很感兴趣。感觉自己这一点，煞笔到极致。</p>
<p><code>所以会有人感觉我很难接近，又有人感觉我热情的像煞笔，希望那些感觉到我那一份热情的人，不要伤害我这份热情~</code></p>
<hr>
<h3 id="想的太多"><a href="#想的太多" class="headerlink" title="想的太多"></a>想的太多</h3><p>多愁善感。我知道自己多愁善感，很多人也说过我。我会因为自己在乎的人的一个无意的举动，有时候我是真不知道他（她）是有意的或无意的，然后自己伤心半天，自己在脑海里各种自虐，会想他这么做的意思，他的想法，他的心情，反正想的所有的一切都是能让自己难受的那种。所以自虐的酸爽，不知道你们有没有能够体会。</p>
<p>有时候会仅因为自己要好的朋友跟别人愉快的在一起冷落自己心里就不开心！！！我是多么有病！！！我自己心里清楚我不应该这样，但是心里难受的时候管不了这么多。</p>
<p>当然也不会对什么朋友都这样，能够让我伤心的，肯定都是特别在乎的。</p>
<p>如果你发现，某一天我对你忽然很冷，可能是我在生你的气，你可能根本不知道自己犯了什么错，没关系，过几天我就自然好了，因为有可能你压根就没做错什么。看到我脸色不好的时候，就当作我大姨夫来了，当然你要是关心的问一下，我是会马上开心起来的。</p>
<p>真为我的朋友们感到心累。我自己心也很累。</p>
<p>我这是自私吧。</p>
<hr>
<h3 id="多么矛盾的一个人"><a href="#多么矛盾的一个人" class="headerlink" title="多么矛盾的一个人"></a>多么矛盾的一个人</h3><p>高中，还有大学刚开学的一段日子，经常心情会很压抑，每天都难受的不行。自己好像人格分裂一样，自己与自己斗争，每天都在批判那个我不喜欢的自己。</p>
<p>我特别喜欢反省自己。吾日三省吾身，我真是受够了。</p>
<p>可以说这是优点，好处就是跟别人有争执之后，我会去反省自己的问题。我能清楚的认识到自己很多的毛病，缺点。</p>
<p>但是这也很痛苦。就像上面说的各种问题，我自己心里清楚的明白自己不应该那样，所以每一次无原由心情难受之后，还会再自责懊恼一番。</p>
<p>或许就是因为自己知道自己的诸多缺点，所以才会自卑。</p>
<p>很多人都不相信我是个自卑的人。虽然我自卑，但是我骨子里还是很积极向上的，正因为自己这么差，所以我要变得更好。</p>
<hr>
<p>好吧，这几天就是又郁闷了。这样写一写，还是管一点用的。因为很多东西我都不知道该跟谁去说。从明天开始，好好加油。</p>
<p>2016年7月26日 星期二</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[世界那么大我想去看]]></title>
      <url>http://yoursite.com/2016/07/06/%E4%B8%96%E7%95%8C%E9%82%A3%E4%B9%88%E5%A4%A7%E6%88%91%E6%83%B3%E5%8E%BB%E7%9C%8B%E7%9C%8B/</url>
      <content type="html"><![CDATA[<p>世界那么大，我想去看看。这里分享最新的hosts，已经还不错的免费梯子。<br><a id="more"></a></p>
<p>本人推荐使用hosts，采用这种方式基本的科学上网已经足够，我也就用一下谷歌搜索，fb和youtube基本是不上的，这一种方式的缺点是有时候youtube视频不能播放。相比用软件好处就是对与不需要翻·墙的网站一点影响也没有，使用很多的软件会影响平时的上网速度。</p>
<p>Windows 系统hosts位于 C:\Windows\System32\drivers\etc\hosts<br>所以方法非常简单，只需要把相关的文件替换即可，也可以把相应的ip地址写到源文件中。</p>
<p>最新hosts下载</p>
<p>更新日期2016.7.3<br>[<a href="http://pan.baidu.com/s/1pLzUkB5" target="_blank" rel="external">点我下载</a>]</p>
<p>除了使用hosts之外，也可以使用一些工具，推荐一个蓝灯，一听名字就知道照亮前方的路，电脑手机都有，手机的自己下载吧，这里提供电脑版，双击安装完之后什么都不用管，一键傻瓜式科学上网。<br><a href="http://pan.baidu.com/s/1dFgBJK9" target="_blank" rel="external">点我下载</a></p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[将整个hexo博客系统原始文件上传到github]]></title>
      <url>http://yoursite.com/2016/07/06/%E5%B0%86%E6%95%B4%E4%B8%AAhexo%E5%8D%9A%E5%AE%A2%E7%B3%BB%E7%BB%9F%E4%B8%8A%E4%BC%A0%E5%88%B0github/</url>
      <content type="html"><![CDATA[<h2 id="这是个引子"><a href="#这是个引子" class="headerlink" title="这是个引子"></a>这是个引子</h2><p>将博客弄得基本差不多了之后忽然发现一个问题，使用hexo deploy命令部署在github上的博客仅仅是hexo系统将执行hexo g之后把md文件转换为静态html之后的文件，（这句话怎么说的这么长~） 那如果某一天电脑崩了，或者是文件丢失了，我们只能从github上弄回这些html文件，我们的这个hexo博客系统是找不回的，菊花一紧！<br><a id="more"></a></p>
<p>这怎么可以，既然有github，我们就要充分利用起来嘛，接下来将整个博客系统的原始文件也弄到github的一个仓库中。</p>
<h2 id="几个git命令解析"><a href="#几个git命令解析" class="headerlink" title="几个git命令解析"></a>几个git命令解析</h2><p>git init //在当前项目目录中生成本地git管理,并建立一个隐藏.git目录。使用这个命令创建的仓库不是裸仓库，而是在当前目录下生成.git目录，该目录为仓库；而当前目录为工作空间。</p>
<p>git add . //添加当前目录中的所有文件到索引。git add命令主要用于把我们要提交的文件的信息添加到索引库中。当我们使用git commit时，git将依据索引库中的内容来进行文件的提交。</p>
<p>git commit -m “注释” //提交到本地源码库，并附加提交注释。git commit命令，将索引内容添加到仓库中。如果我们这里不用-m参数的话，git将调到一个文本编译器（通常是vim）来让你输入提交的描述信息</p>
<p>git commit -a -m “提交的描述信息”<br>git commit 命令的-a 选项可只将所有被修改或者已删除的且已经被git管理的文档提交倒仓库中。如果只是修改或者删除了已被Git 管理的文档，是没必要使用git add 命令的。</p>
<p>git remote add origin 仓库地址 //添加到远程项目，别名为origin。git remote是添加一个远程仓库。</p>
<p>git push -u origin master //把本地源码库push到github 别名为origin的远程项目中，确认提交，git push -u origin master第一次推送master分支的所有内容。此后，每次本地提交后，只要有必要，就可以使用命令git push origin master推送最新修改</p>
<h2 id="开始操作"><a href="#开始操作" class="headerlink" title="开始操作"></a>开始操作</h2><h3 id="为本地hexo文件生成git管理"><a href="#为本地hexo文件生成git管理" class="headerlink" title="为本地hexo文件生成git管理"></a>为本地hexo文件生成git管理</h3><p>进入hexo博客的根目录，然后git bash here。在命令行中输入</p>
<pre><code>git init
</code></pre><p>这时候将会发现，文件夹中多了一个.git的隐藏文件夹，第一步完成。</p>
<h3 id="添加所有文件到索引"><a href="#添加所有文件到索引" class="headerlink" title="添加所有文件到索引"></a>添加所有文件到索引</h3><p>继续在命令行中输入</p>
<pre><code>git add . 
</code></pre><p>注意这个 .  这样就会将所有的文件加到索引中</p>
<h3 id="提交到本地源码库"><a href="#提交到本地源码库" class="headerlink" title="提交到本地源码库"></a>提交到本地源码库</h3><p>继续输入</p>
<pre><code>git commit -m &quot;first commit&quot;
</code></pre><p>这样就把索引中的所有东西都提交到了本地的源码库中了，提交的注释为：first commit</p>
<h3 id="新建远程仓库"><a href="#新建远程仓库" class="headerlink" title="新建远程仓库"></a>新建远程仓库</h3><p>到自己的github上，新建一个仓库，仓库的名字随便起，我起了一个hexoBlogFile，拷贝一下这个仓库的地址，下一步使用</p>
<h3 id="添加到远程项目"><a href="#添加到远程项目" class="headerlink" title="添加到远程项目"></a>添加到远程项目</h3><p>在面板中输入</p>
<pre><code>git remote add origin https://github.com/xxxx  
</code></pre><p>上面改成你自己的地址就可以了，这样就把本地的代码块与远程仓库连接起来了</p>
<h3 id="将本地源码库push到远程仓库"><a href="#将本地源码库push到远程仓库" class="headerlink" title="将本地源码库push到远程仓库"></a>将本地源码库push到远程仓库</h3><p>继续输入</p>
<pre><code>git push -u origin master
</code></pre><p>完成本地库push到远程仓库</p>
<h3 id="后续的代码更新"><a href="#后续的代码更新" class="headerlink" title="后续的代码更新"></a>后续的代码更新</h3><p>以后文件修改了之后，需要不断的更新，只需要如下几个代码就可以了，先进入所在文件夹</p>
<pre><code>git add .
git commit -m &quot;update test&quot;
git push -u origin master
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[开启markdown之旅]]></title>
      <url>http://yoursite.com/2016/07/05/%E5%BC%80%E5%90%AFmarkdown%E4%B9%8B%E6%97%85/</url>
      <content type="html"><![CDATA[<h2 id="markdown编辑器"><a href="#markdown编辑器" class="headerlink" title="markdown编辑器"></a>markdown编辑器</h2><p>所话说欲先攻其器，必先利其器，为了能更好的快速进行markdown的使用和写作，匆匆看完markdown的基本语法之后就开始搜罗windows平台的编辑器，Linux我还是吃不消啊，真是惭愧。<br><a id="more"></a></p>
<ul>
<li>markdownPad2 ：下载了一个绿色版，但是发现预览功能失败，搜了一下发现在win10平台很多人都这样，需要下载一个插件，100M多点，由于校园网网速问题还没下载成功。</li>
<li>小书匠编辑器 ：看了很多的编辑器感觉都大同小异，知乎上一人推荐了这个编辑器，有web版，正在试用，感觉不错。下载了离线版，感觉不错。但是界面不好看，启动速度太慢。</li>
<li>在windows的应用商店发现了一个uwp的markdown编辑器，名字就是markdown uwp使用了一下真不错，但是有几个不足点，不能使用CTRL+C保存，只能点击保存按钮，开发者是陈关州，于是搜了一下发现还有桌面版的，功能更加强大，名字是markdownEditor，现在正在试用，感觉要比小书匠来的舒服。</li>
</ul>
<h2 id="markdown的基本语法"><a href="#markdown的基本语法" class="headerlink" title="markdown的基本语法"></a>markdown的基本语法</h2><p>markdown语法确实简单，下面简单介绍。</p>
<ul>
<li>控制各级标题 # ## ###</li>
<li></li>
</ul>
<p>hexo中为一篇文章添加多个标签：</p>
<pre><code>tags: [markdown,博客,编辑]
</code></pre>]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[github + hexo 博客搭建 2016-6-30]]></title>
      <url>http://yoursite.com/2016/07/05/github-hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
      <content type="html"><![CDATA[<h2 id="git安装"><a href="#git安装" class="headerlink" title="git安装"></a>git安装</h2><p>git的相关教程非常多，这里就不赘述了<br><a id="more"></a></p>
<h2 id="node-js安装"><a href="#node-js安装" class="headerlink" title="node.js安装"></a>node.js安装</h2><p>去官网下载 <a href="http://nodejs.org/download/" target="_blank" rel="external">http://nodejs.org/download/</a> ，之后安装，我使用了默认安装路径</p>
<h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><p>在电脑的屏幕上右键（随便选择桌面上就行），选择Git Bash Here ，然后出现终端界面，输入npm install -g hexo<br>回车之后等待，但是出错，报错如下</p>
<blockquote>
<p>npm WARN optional Skipping failed optional dependency /hexo/chokidar/fsevents:<br>npm WARN notsup Not compatible with your operating system or architecture: fsevents@1.0.12<br>npm ERR! Windows_NT 10.0.10586<br>npm ERR! argv “C:\Program Files\nodejs\node.exe” “C:\Program Files\nodejs\node_modules\npm\bin\npm-cli.js” “install” “-g” “hexo”<br>npm ERR! node v6.2.2<br>npm ERR! npm  v3.9.5<br>npm ERR! shasum check failed for C:\Users\kylin\AppData\Local\Temp\npm-12620-bfae7f80\registry.npmjs.org\JSONStream-\JSONStream-1.1.3.tgz<br>npm ERR! Expected: 1b296c7949b47e4fc22ac7958f76d2fbe2415493<br>npm ERR! Actual:   46eb6043a766a9b5f25d516cd21373227d912302<br>npm ERR! From:     <a href="https://registry.npmjs.org/JSONStream/-/JSONStream-1.1.3.tgz" target="_blank" rel="external">https://registry.npmjs.org/JSONStream/-/JSONStream-1.1.3.tgz</a><br>npm ERR!<br>npm ERR! If you need help, you may report this error at:<br>npm ERR!     <a href="https://github.com/npm/npm/issues" target="_blank" rel="external">https://github.com/npm/npm/issues</a><br>npm ERR! Please include the following file with any support request:<br>npm ERR!     C:\Users\kylin\Desktop\npm-debug.log</p>
</blockquote>
<p>出错的原因不明白，尝试各种解决方法：</p>
<ul>
<li>将安装好的最新版卸载掉，重新下载了稳定版v4.4.4安装重试</li>
<li>以管理员身份运行Git Bash，然后再输入npm install -g hexo，成功！！！</li>
</ul>
<p>创建一个文件夹，保存自己的hexo网站，在文件夹内右键，选择Git Bash Here ，输入</p>
<pre><code>hexo init
npm install
</code></pre><p>输入hexo server，出现下图的话表示hexo运行成功</p>
<p>![hexo运行成功][1]</p>
<p>浏览器访问 <a href="http://localhost:4000" target="_blank" rel="external">http://localhost:4000</a> ，看一下会有什么效果</p>
<h2 id="开始Github"><a href="#开始Github" class="headerlink" title="开始Github"></a>开始Github</h2><ol>
<li>github账号以前已经注册过，直接使用</li>
<li>建立一个仓库，与用户名对应的仓库，仓库名必须为『your_user_name.github.io』</li>
<li><p>将本地的ssh-key复制到github上</p>
<pre><code>ssh-keygen -t rsa -C &quot;你的github注册邮箱&quot;
</code></pre><p> 然后一直回车，直到出现</p>
<p> ![enter description here][2]<br> 查看电脑中以前的ssh-key，输入：</p>
<pre><code>cd ~/.ssh/ &amp;&amp; ls
</code></pre><p> 如果结果为： id_rsa  id_rsa.pub继续进行，输入：</p>
<pre><code>cat id_rsa.pub
</code></pre><p> 将会显示出SSH-KEY，复制内容粘贴到github的ssh中</p>
</li>
<li><p>在hexo目录中有一个  config.yml 文件, 在其最后补全如下信息：<br>   deploy:<br>   type: git<br>   repo: <a href="https://github.com/yourname/yourname.github.io.git" target="_blank" rel="external">https://github.com/yourname/yourname.github.io.git</a></p>
<pre><code>branch: master
执行

     hexo deploy
</code></pre><p>   出错：</p>
<blockquote>
<p>ERROR Deployer not found: git</p>
</blockquote>
<p> 找到解决方案：<br> 需要先安装hexo-deployer-git，然后将github修改为git</p>
<pre><code>npm install hexo-deployer-git --save
</code></pre><p> 之后重新执行hexo deploy<br> 弹出一个对话框，输入github账户名和密码，完成之后，成功将本地的hexo文件上传到github</p>
</li>
</ol>
<p>在使用ssh连接github的时候一直不成功，输入ssh -T git@github.com显示：</p>
<pre><code>$ ssh -T git@github.com
The authenticity of host &apos;github.com (192.30.253.112)&apos; can&apos;t be established.
RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.
Are you sure you want to continue connecting (yes/no)?
Host key verification failed.
</code></pre><p>尝试了很多次依然是不管用，发现这个问题有点白痴，要在Are you sure you want to continue connecting (yes/no)?这句话后面填上yes，回车才能成功！！！！</p>
<h2 id="使用GitHub-Pages建立博客"><a href="#使用GitHub-Pages建立博客" class="headerlink" title="使用GitHub Pages建立博客"></a>使用GitHub Pages建立博客</h2><p>在搜索hexo的相关资料的时候发现了next主题，所以首先使用next主题看一下效果，next的地址为 <a href="http://theme-next.iissnan.com/" target="_blank" rel="external">http://theme-next.iissnan.com/</a><br>上面有详细的配置说明，可以把主题设置的更加适合自己。</p>
<h4 id="发表新文章"><a href="#发表新文章" class="headerlink" title="发表新文章"></a>发表新文章</h4><ul>
<li>hexo new “文章标题”（可以简写new为n）</li>
<li>我喜欢直接在source_posts文件夹下新建一个.md文件，效果是一样的，或者把在其他地方写好的md文件直接拷贝过来</li>
</ul>
<p>然后继续 hexo g，hexo d，文章就部署好了</p>
<h4 id="删除文章"><a href="#删除文章" class="headerlink" title="删除文章"></a>删除文章</h4><p>删除文章非常简单，直接把相应的.md文件在删除，然后执行hexo g，hexo d就OK了</p>
<h4 id="首页显示文章摘要"><a href="#首页显示文章摘要" class="headerlink" title="首页显示文章摘要"></a>首页显示文章摘要</h4><p>在next主题使用说明中有说明，一共三种方法：</p>
<ul>
<li>在文章中使用 <!-- more --> 手动进行截断，Hexo 提供的方式 <strong>推荐</strong></li>
<li>在文章的 front-matter 中添加 description，并提供文章摘录</li>
<li><p>自动形成摘要，在 主题配置文件 中添加：</p>
<pre><code>auto_excerpt:
  enable: true
  length: 150
</code></pre><p>默认截取的长度为 150 字符，可以根据需要自行设定</p>
</li>
</ul>
<p>建议使用 <!-- more -->（即第一种方式），除了可以精确控制需要显示的摘录内容以外， 这种方式也可以让 Hexo 中的插件更好的识别。</p>
<h4 id="添加独立域名"><a href="#添加独立域名" class="headerlink" title="添加独立域名"></a>添加独立域名</h4><p>很早之前就买了一个域名，kylin10.com,但是确一直没有用起来，之前的博客网站放在新浪云SAE上，域名没有备案无法绑定，SAE的费用也是越来越高，用完了云豆就来折腾github了。</p>
<p>将github与自己的域名绑定只需下面几部：</p>
<ol>
<li>在Hexo的source目录下新建一个CNAME文件，里面写上自己的域名，注意前面不要加www等内容，直接写kylin10.com，完成之后deploy</li>
<li>注册<a href="https://www.dnspod.cn" target="_blank" rel="external">DNSpod</a>，添加域名,可以按照下图设置：<br><img src="http://cnfeat.qiniudn.com/15.png" alt="图片描述"><br>图片来自<a href="http://www.jianshu.com/p/05289a4bc8b2/" target="_blank" rel="external">http://www.jianshu.com/p/05289a4bc8b2/</a></li>
</ol>
<p>3.在购买域名的管理中心修改域名对应的dns</p>
<h4 id="同时部署至github和Coding"><a href="#同时部署至github和Coding" class="headerlink" title="同时部署至github和Coding"></a>同时部署至github和Coding</h4><p>同时将博客部署到github跟coding上，可以参考这个教程 <a href="http://sanwen8.cn/p/1a0TJhT.html" target="_blank" rel="external">http://sanwen8.cn/p/1a0TJhT.html</a></p>
<p>但是有一点需要注意：</p>
<p>在给coding上添加ssh的时候要选择个人公钥！！！，默认的是公开公钥，第一次我没有注意，添加之后git一直出错。</p>
<h4 id="站内搜索"><a href="#站内搜索" class="headerlink" title="站内搜索"></a>站内搜索</h4><p>不知道为什么，站内搜索一直失败，还在努力中</p>
]]></content>
    </entry>
    
  
  
</search>
